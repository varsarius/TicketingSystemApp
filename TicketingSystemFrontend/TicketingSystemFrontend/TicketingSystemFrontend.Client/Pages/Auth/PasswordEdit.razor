@page "/profile/change-password"
@inject NavigationManager NavigationManager

<h1><b>Change Password</b></h1>

<EditForm Model="@changePasswordModel" OnValidSubmit="HandlePasswordChange">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="oldPassword" class="form-label">Current password</label>
        <InputText id="oldPassword" type="password" class="form-control" @bind-Value="changePasswordModel.OldPassword" />
    </div>

    <div class="mb-3">
        <label for="newPassword" class="form-label">New password</label>
        <InputText id="newPassword" type="password" class="form-control" @bind-Value="changePasswordModel.NewPassword" />
    </div>

    <div class="mb-3">
        <label for="confirmPassword" class="form-label">Confirm New password</label>
        <InputText id="confirmPassword" type="password" class="form-control" @bind-Value="changePasswordModel.ConfirmPassword" />
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="text-danger">@errorMessage</div>
    }

    <button type="submit" class="btn btn-primary me-2">Save</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
</EditForm>

@code {
    private ChangePasswordModel changePasswordModel = new();
    private string? errorMessage;

    private void HandlePasswordChange()
    {
        if (changePasswordModel.NewPassword != changePasswordModel.ConfirmPassword)
        {
            errorMessage = "New password and confirmation do not match.";
            return;
        }

        // TODO: Call backend to update password
        Console.WriteLine($"Old: {changePasswordModel.OldPassword}, New: {changePasswordModel.NewPassword}");

        NavigationManager.NavigateTo("/profile");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/profile");
    }

    public class ChangePasswordModel
    {
        public string OldPassword { get; set; } = string.Empty;
        public string NewPassword { get; set; } = string.Empty;
        public string ConfirmPassword { get; set; } = string.Empty;
    }
}
