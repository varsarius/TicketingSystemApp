@page "/tickets/{id:int}/edit"
@using TicketingSystemFrontend.Client.DTOs
@using TicketingSystemFrontend.Client.Requests
@using TicketingSystemFrontend.Client.Services
@using TicketingSystemFrontend.Client.Services.Interfaces
@inject ITicketService TicketService
@inject ITicketCategoryService TicketCategoryService

@inject NavigationManager Navigation


<h3>Ticket Edit</h3>

@if (ticket == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="ticketEditRequest" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="title" class="form-label">Title</label>
            <InputText id="title" class="form-control" @bind-Value="ticketEditRequest.Title" />
        </div>

        <div class="mb-3">
            <label for="description" class="form-label">Description</label>
            <InputTextArea id="description" class="form-control" @bind-Value="ticketEditRequest.Description" rows="5" />
        </div>

        <div class="mb-3">
            <label for="category" class="form-label">Category</label>
            <div class="d-flex align-items-center">
                <InputSelect id="category" class="form-control me-5" @bind-Value="ticketEditRequest.CategoryId">
                    <option value="">-- Select a category --</option>
                    @foreach (var category in categories)
                    {
                        <option value="@category.Id">@category.CategoryName</option>
                    }
                </InputSelect>
            </div>
        </div>

        <div class="mb-3">
            <label for="status" class="form-label">Status</label>
            <div class="d-flex align-items-center">
                <InputSelect id="status" class="form-control me-5" @bind-Value="ticketEditRequest.CategoryId">
                    <option value="">-- Select a status --</option>
                    @foreach (var status in categories)
                    {
                        <option value="@status.Id">@status.CategoryName</option>
                    }
                </InputSelect>
            </div>
        </div>

        <div class="mb-3">
            <label for="priority" class="form-label">Category</label>
            <div class="d-flex align-items-center">
                <InputSelect id="category" class="form-control me-5" @bind-Value="ticketEditRequest.CategoryId">
                    <option value="">-- Select a category --</option>
                    @foreach (var category in categories)
                    {
                        <option value="@category.Id">@category.CategoryName</option>
                    }
                </InputSelect>
            </div>
        </div>

        <button type="submit" class="btn btn-success me-2">Save</button>
        <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
    </EditForm>
}


@code {
    [Parameter]
    public int id { get; set; }

    private List<TicketCategoryDto> categories = [];

    private TicketDto? ticket;
    private TicketUpdateRequest ticketEditRequest = new();

    protected override async Task OnInitializedAsync()
    {
        categories = await TicketCategoryService.GetAllAsync();
    }

    protected override async Task OnParametersSetAsync()
    {
        ticket = await TicketService.GetByIdAsync(id);

        if (ticket != null)
        {
            // Map ArticleDto to ArticleCreateRequest (or create an UpdateRequest DTO if you want)
            ticketEditRequest.CategoryId = ticket.TicketCategoryId;
            ticketEditRequest.Title = ticket.Title;
            ticketEditRequest.Description = ticket.Description;
            ticketEditRequest.Id = id; // If needed, populate appropriately
        }
    }
    private async Task HandleValidSubmit()
    {
        await TicketService.UpdateAsync(ticketEditRequest);
        Navigation.NavigateTo($"/articles/{id}");
    }
    private void Cancel()
    {
        Navigation.NavigateTo($"/tickets/{id}");
    }
}
