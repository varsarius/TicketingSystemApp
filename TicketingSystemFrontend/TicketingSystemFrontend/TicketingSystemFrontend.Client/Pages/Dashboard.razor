@page "/dashboard"
@using TicketingSystemFrontend.Client.DTOs
@using TicketingSystemFrontend.Client.Services.Interfaces
@inject ITicketService TicketService
@inject ITicketCategoryService TicketCategoryService

<h3>Dashboard</h3>

@if (tickets is null || categories is null)
{
    <p>Loading...</p>
}
else
{
    <div class="d-flex justify-content-around">
        <StatusDonut Tickets="tickets" />
        <PriorityDonut Tickets="tickets" />
        <CategoryDonut Tickets="tickets" Categories="categories" />
    </div>
}

@code {
    private List<TicketDto>? tickets;
    private List<TicketCategoryDto>? categories;

    protected override async Task OnInitializedAsync()
    {
        // Загружаем тикеты и категории параллельно
        var ticketsTask = TicketService.GetAllSortFilterAsync();
        var categoriesTask = TicketCategoryService.GetAllAsync();

        await Task.WhenAll(ticketsTask, categoriesTask);

        tickets = ticketsTask.Result;
        categories = categoriesTask.Result;
    }
}
